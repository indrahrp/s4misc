AWSTemplateFormatVersion: "2010-09-09"
Description: Creates an EC2 Instance and Roles for a Demo Server

# Parameters
Parameters:
  InstanceType:
    Description: >-
     If you want to run this server on the free tier, use a t2.micro.
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.micro
    - t2.medium
    - t2.large
    ConstraintDescription: "Must be 't2.micro', 't2.medium', or 't2.large'."

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Recommended to use the Default VPC here

  PublicSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: Select a public subnet to launch into

  InstanceName:
    Type: String
    Default: s4-aws-batch-demo-server
    Description: The name of the instance that is created

  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be the name of an existing EC2 KeyPair that is on your local machine.

  SSHLocation:
    Description: "The IP address range that can be used to SSH to the EC2 instances"
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

  S3BucketName:
    Description: S3 bucket you are using for workflow inputs and outputs
    Type: String

  BatchQueue:
    Description: ARN of the AWS Batch Job Queue this server will use by default
    Type: String

  JobDefinition:
    Description: ARN of the AWS Batch Job Definition this server will use by default
    Type: String
# Resources
Resources:
  Ec2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      Policies:
        - PolicyName: !Sub S4-Demo-BatchQueue-Access-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              Effect: Allow
              Resource: "*"
              Action:
                - "batch:DescribeJobQueues"
                - "batch:DeregisterJobDefinition"
                - "batch:TerminateJob"
                - "batch:DescribeJobs"
                - "batch:CancelJob"
                - "batch:SubmitJob"
                - "batch:RegisterJobDefinition"
                - "batch:DescribeJobDefinitions"
                - "batch:ListJobs"
                - "batch:DescribeComputeEnvironments"

        - PolicyName: !Sub S4-Demo-S3Bucket-Access-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              Effect: Allow
              Resource:
                - !Join ["", ["arn:aws:s3:::", !Ref S3BucketName]]
                - !Join ["", ["arn:aws:s3:::", !Ref S3BucketName, "/*"]]
              Action: "*"

        - PolicyName: !Sub S4-Demo-CloudWatch-Access-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              Effect: Allow
              Resource: "arn:aws:logs:*:*:*"
              Action:
                - "logs:CreateLogGroup"
                - "logs:CreateLogStream"
                - "logs:PutLogEvents"
                - "logs:DescribeLogStreams"

      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM"

      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: Ec2InstanceRole

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: s4-aws-batch-demo-sg
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp:
          Ref: SSHLocation

  EC2Instance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - config1
        config1:
          files:
            "/home/ec2-user/submit_job.sh":
              content: !Sub |
                #!/bin/bash
                aws s3 ls s3://${S3BucketName} |while read d t s file; do
                    case $file in
                      *.jpg|*jpeg)  aws batch submit-job --region us-east-1 \
                          --job-name s4-aws-batch-demo \
                          --job-queue ${BatchQueue} \
                          --job-definition ${JobDefinition} \
                          --container-overrides "command=[python, image_to_thumbnail.py, ${S3BucketName}, $file, ${S3BucketName} ]" ;;
                      *) echo "skipping $file";;
                    esac
                done;
              mode: "000755"
              owner: "ec2-user"
              group: "ec2-user"
    Properties:
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref EC2InstanceProfile
      KeyName: !Ref KeyName
      ImageId: ami-0ff8a91507f77f867
      Tags:
        - Key: Name
          Value: !Ref InstanceName

      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -x
          yum -y update
          yum install -y aws-cfn-bootstrap
          /opt/aws/bin/cfn-init --verbose --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}

      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          GroupSet:
            - !Ref EC2SecurityGroup
          SubnetId: !Ref PublicSubnetID


Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network Configuration"
        Parameters:
          - VpcId
          - PublicSubnetID
      - Label:
          default: "Instance Configuration"
        Parameters:
          - InstanceType
          - InstanceName
          - KeyName
          - SSHLocation
          - S3BucketName
          - BatchQueue
          - JobDefinition

    ParameterLabels:
      VpcId:
        default: "VPC ID"
      PublicSubnetID:
        default: "Public Subnet ID"
      InstanceName:
        default: "Instance Name"
      SSHLocation:
        default: "SSH Address Range"
      KeyName:
        default: "Key Pair Name"
      S3BucketName:
        default: "S3 Bucket Name"
      BatchQueue:
        default: "Default Batch Queue"
      JobDefinition:
        default: "Default Job Definition"

Outputs:
  EC2Instance:
    Description: The EC2 Instance ID of your Cromwell Server
    Value: !Ref EC2Instance

  PublicIp:
    Value: !GetAtt EC2Instance.PublicIp
    Description: Cromwell server public IP address

  HostName:
    Value: !GetAtt EC2Instance.PublicDnsName
    Description: Cromwell server public DNS name