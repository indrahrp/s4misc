AWSTemplateFormatVersion: 2010-09-09
Description: >
    Deploys resource for a AWS Batch environment that is suitable for genomics, including default and high-priority JobQueues.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "AWS Batch Environment Config"
        Parameters:
        - CustomAmiId
        - Ec2KeyPairName
        - VpcId
        - SubnetIds
        - SpotBidPercentage
        - DefaultCEMinvCpus
        - DefaultCEMaxvCpus
        - HighPriorityCEMinvCpus
        - HighPriorityCEMaxvCpus
        - DefaultRetryNumber
        - BatchServiceRoleArn
        - Ec2InstanceProfileArn
        - SpotFleetRoleArn
    ParameterLabels:
      CustomAmiId:
        default: Custom AMI ID
      Ec2KeyPairName:
        default: EC2 Key Pair Name
      VpcId:
        default: VPC ID
      SubnetIds:
        default: VPC Subnet IDs
      SpotBidPercentage:
        default: Spot market bid percentage (default = 100)
      DefaultCEMinvCpus:
        default: Default Queue Min vCPU count
      DefaultCEMaxvCpus:
        default: Default Queue Max vCPU count
      HighPriorityCEMinvCpus:
        default: HighPriority Queue Min vCPU count
      HighPriorityCEMaxvCpus:
        default: HighPriority Queue Max vCPU count
      DefaultRetryNumber:
        default: Job retry attempts
      BatchServiceRoleArn:
        default: AWS Batch service role ARN
      Ec2InstanceProfileArn:
        default: EC2 Instance Profile ARN
      SpotFleetRoleArn:
        default: Spot Fleet Role ARN
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: 'The VPC to create security groups and deploy AWS Batch to. NOTE: Must be the same VPC as the provided subnet IDs.'
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: 'Subnets you want your batch compute environment to launch in. We recommend private subnets. NOTE: Must be from the VPC provided.'
  SpotBidPercentage:
    Type: Number
    Description: Maximum Spot bid percentage from on-demand instance price.
    MaxValue: 100
    MinValue: 5
    Default: 100
  CustomAmiId:
    Type: AWS::EC2::Image::Id
    Description: AMI you want your AWS Batch Compute Environment to use
  Ec2KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of the EC2 Key Pair for connecting to EC2 instances launched in your compute environment
  HighPriorityCEMinvCpus:
    Type: Number
    Description: Minimum number of CPUs in the high-priority compute environment. Default 0.
    Default: 4
    MinValue: 0
  HighPriorityCEMaxvCpus:
    Type: Number
    Description: Maximum number of CPUs in the high-priority compute environment. Should be >= than MinCpus
    Default: 64
    MinValue: 0
  DefaultCEMinvCpus:
    Type: Number
    Description: Minimum number of CPUs in the default compute environment. Default 0.
    Default: 4
    MinValue: 0
  DefaultCEMaxvCpus:
    Type: Number
    Description: Maximum number of CPUs in the default compute environment. Should be >= than MinCpus
    Default: 64
    MinValue: 0
  DefaultRetryNumber:
    Type: Number
    Description: Number of retries for each AWS Batch job. Integer required.
    MaxValue: 3
    MinValue: 0
    Default: 1
  BatchServiceRoleArn:
    Type: String
    Description: The IAM Role ARN for the Batch service
  SpotFleetRoleArn:
    Type: String
    Description: The IAM Role ARN for Batch to call Spot Fleet service
  Ec2InstanceProfileArn:
    Type: String
    Description: The IAM Role ARN for the Batch service

Resources:
  GenomicsBatchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for genomics workflows on Batch
      VpcId:
        Ref: VpcId
  SGSSHIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: GenomicsBatchSecurityGroup
    Properties:
      GroupId: !Ref GenomicsBatchSecurityGroup
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: 0.0.0.0/0
  SGAllTcpEgress:
    Type: AWS::EC2::SecurityGroupEgress
    DependsOn: GenomicsBatchSecurityGroup
    Properties:
      GroupId: !Ref GenomicsBatchSecurityGroup
      IpProtocol: tcp
      FromPort: '0'
      ToPort: '65535'
      CidrIp: 0.0.0.0/0
  SGAllTcpSelfIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: GenomicsBatchSecurityGroup
    Properties:
      GroupId: !Ref GenomicsBatchSecurityGroup
      IpProtocol: tcp
      FromPort: '0'
      ToPort: '65535'
      SourceSecurityGroupId: !Ref GenomicsBatchSecurityGroup

  GenomicsDefaultComputeEnv:
    Type: AWS::Batch::ComputeEnvironment
    DependsOn: GenomicsBatchSecurityGroup
    Properties:
      ServiceRole: !Ref BatchServiceRoleArn
      Type: MANAGED
      State: ENABLED
      ComputeResources:
        BidPercentage: !Ref SpotBidPercentage
        Ec2KeyPair: !Ref Ec2KeyPairName
        ImageId: !Ref CustomAmiId
        InstanceRole: !Ref Ec2InstanceProfileArn
        InstanceTypes:
          - optimal
        MinvCpus: !Ref DefaultCEMinvCpus
        MaxvCpus: !Ref DefaultCEMaxvCpus
        SecurityGroupIds:
          - !Ref GenomicsBatchSecurityGroup
        SpotIamFleetRole: !Ref SpotFleetRoleArn
        Subnets: !Ref SubnetIds
        Type: SPOT

  GenomicsHighPriorityComputeEnv:
    Type: AWS::Batch::ComputeEnvironment
    DependsOn: GenomicsBatchSecurityGroup
    Properties:
      ServiceRole: !Ref BatchServiceRoleArn
      Type: MANAGED
      State: ENABLED
      ComputeResources:
        Ec2KeyPair: !Ref Ec2KeyPairName
        ImageId: !Ref CustomAmiId
        InstanceRole:  !Ref Ec2InstanceProfileArn
        InstanceTypes:
          - optimal
        MinvCpus: !Ref HighPriorityCEMinvCpus
        MaxvCpus: !Ref HighPriorityCEMaxvCpus
        SecurityGroupIds:
          - !Ref GenomicsBatchSecurityGroup
        Subnets: !Ref SubnetIds
        Type: EC2

  GenomicsHighPriorityQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      Priority: 1000
      State: ENABLED
      JobQueueName: !Join ["-", ["GenomicsHighPriorityQueue", !Select [2, !Split ["/", !Ref "AWS::StackId" ]]]]
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref GenomicsHighPriorityComputeEnv
        - Order: 2
          ComputeEnvironment: !Ref GenomicsDefaultComputeEnv

  GenomicsDefaultQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      Priority: 1
      State: ENABLED
      JobQueueName: !Join ["-", ["GenomicsDefaultQueue", !Select [2, !Split ["/", !Ref "AWS::StackId" ]]]]
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref GenomicsDefaultComputeEnv
        - Order: 2
          ComputeEnvironment: !Ref GenomicsHighPriorityComputeEnv

Outputs:
  DefaultJobQueueArn:
    Value: !Ref GenomicsDefaultQueue
  HighPriorityJobQueueArn:
    Value: !Ref GenomicsHighPriorityQueue
