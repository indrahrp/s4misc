// aws.conf
include required(classpath("application"))

aws {
  application-name = "cromwell"
  auths = [{
      name = "PBGDev"
      scheme = "default"
  }]
  region = "us-east-1"
}

engine {
  filesystems {
    s3 { auth = "PBGDev" }
  }
}

docker {
  hash-lookup {
    // /!\ Attention /!    // If you disable this call caching will be disabled for jobs with floating docker tags !
    enabled = true
    // Time in minutes before an entry expires from the docker hashes cache and needs to be fetched again
    cache-entry-ttl = "20 minutes"
    // Maximum number of elements to be kept in the cache. If the limit is reached, old elements will be removed from the cache
    cache-size = 200
    // How should docker hashes be looked up. Possible values are "local" and "remote"
    // "local": Lookup hashes on the local docker daemon using the cli
    // "remote": Lookup hashes on docker hub and gcr
    method = "remote"
  }
}

backend {
  default = "AWSBATCH"

  providers {

    # Using AWS Batch
    AWSBATCH {
      actor-factory = "cromwell.backend.impl.aws.AwsBatchBackendLifecycleActorFactory"
      config {
        root = "s3://s4-research-pbg-rhythm/Data/2019-02-23_WWP5/RtmGermline/SAMPLEID/"
        auth = "PBGDev"

        numSubmitAttempts = 3
        numCreateDefinitionAttempts = 3

        concurrent-job-limit = 8

        default-runtime-attributes {
          queueArn: "arn:aws:batch:us-east-1:260062248592:job-queue/GenomicsHighPriorityQueue-80d8b8f0-15ed-11e9-b8b7-12ddf705bbc4"
          continueOnReturnCode: 0

        }

        filesystems {
          s3 {
            auth = "PBGDev"
          }
        }
      }
    }
  }
}

